package jio.com.jioprivate;

import android.app.Activity;
import android.content.Context;
import android.content.pm.PackageManager;
import android.net.wifi.WifiConfiguration;
import android.net.wifi.WifiEnterpriseConfig;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import android.telephony.SubscriptionInfo;
import android.telephony.SubscriptionManager;
import android.text.TextUtils;
import android.widget.TextView;
import android.widget.Toast;

import java.lang.reflect.Field;
import java.util.List;

import static java.lang.String.format;

//import android.telephony.IccOpenLogicalChannelResponse;

public class MyActivity extends Activity {

    private WifiManager wfMgr = null;
    String ssid = "JioPrivateNet";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        wfMgr = (WifiManager) getApplicationContext().getSystemService(Context.WIFI_SERVICE);

        setContentView(R.layout.activity_my);
        connectToJioPrivate();

    }

    private void connectToJioPrivate() {
        if (!ssid.isEmpty() && PermissionChecker.checkReadPhoneStatePermission(this)) {
            WifiEnterpriseConfig enterpriseConfig = new WifiEnterpriseConfig();
            enterpriseConfig.setEapMethod(WifiEnterpriseConfig.Eap.AKA); // EAP SIM / AKA for Mobile Phones
            WifiConfiguration wifiConfig = new WifiConfiguration();
            Field field = null;
            try {
                field = wifiConfig.getClass().getDeclaredField("SIMNum");
                field.setInt(wifiConfig, getJioSimSlot());

            } catch (NoSuchFieldException e) {
                e.printStackTrace();

                try {
                    field = wifiConfig.getClass().getDeclaredField("simSlot");
                    field.set(wifiConfig, String.valueOf(getJioSimSlot()));
                } catch (NoSuchFieldException e1) {
                    e1.printStackTrace();
                } catch (IllegalAccessException e1) {
                    e1.printStackTrace();
                }


            } catch (IllegalAccessException e) {
                e.printStackTrace();
            }

            //displayConfig();
            wifiConfig.SSID = formatSSID(ssid);
            wifiConfig.status = WifiConfiguration.Status.ENABLED;
            wifiConfig.allowedKeyManagement.clear();
            wifiConfig.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.WPA_EAP);
            wifiConfig.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.IEEE8021X);
            wifiConfig.enterpriseConfig = enterpriseConfig;
            wfMgr.setWifiEnabled(true);
           // wfMgr.disconnect();
            int networkId = wfMgr.addNetwork(wifiConfig);
            networkId = networkId == -1 ? getExistingNetworkId(ssid) : networkId;
            if (networkId != -1) {
                wfMgr.reconnect();
                wfMgr.enableNetwork(networkId, true);
            } else {
                wfMgr.updateNetwork(wifiConfig);
            }
        }
       ((TextView) findViewById(R.id.config_text)).setText("Provider name:" + providerName + "\nSim Slot:" + simNumber);


    }

    private void displayConfig() {
        if (wfMgr.isWifiEnabled()) {
            StringBuffer configList = new StringBuffer();
            final List<WifiConfiguration> wifiConfigs = wfMgr.getConfiguredNetworks();
            for (WifiConfiguration i : wifiConfigs) {
                if (i.SSID != null && i.SSID.equals("\"" + ssid + "\"")) {
                    configList.append(i);
                    ((TextView) findViewById(R.id.config_text)).setText(configList);
                }
            }

        } else {
        }
    }

    public static String formatSSID(String wifiSSID) {
        return format("\"%s\"", wifiSSID);
    }


    private int simNumber = 1;
    private String providerName = "Default";

    private int getJioSimSlot() {

        SubscriptionManager subscriptionManager = SubscriptionManager.from(this);
        List<SubscriptionInfo> activeSubscriptionInfoList = subscriptionManager.getActiveSubscriptionInfoList();
        if (activeSubscriptionInfoList != null) {
            for (SubscriptionInfo subscriptionInfo : activeSubscriptionInfoList) {
                CharSequence carrierName = subscriptionInfo.getCarrierName();
                if (carrierName != null && carrierName.toString().toLowerCase().contains("JIO".toLowerCase())) {
                    simNumber = subscriptionInfo.getSimSlotIndex();
                    providerName = carrierName.toString();
                    simNumber = simNumber + 1;

                }

            }
        }

        return simNumber;
    }


    private int getExistingNetworkId(String SSID) {
        List<WifiConfiguration> configuredNetworks = wfMgr.getConfiguredNetworks();
        if (configuredNetworks != null) {
            for (WifiConfiguration existingConfig : configuredNetworks) {
                if (areEqual(trimQuotes(existingConfig.SSID), trimQuotes(SSID))) {
                    return existingConfig.networkId;
                }
            }
        }
        return -1;
    }

    public static boolean areEqual(String SSID, String anotherSSID) {
        return TextUtils.equals(trimQuotes(SSID), trimQuotes(anotherSSID));
    }

    public static String trimQuotes(String str) {
        return !isEmpty(str) ? str.replaceAll("^\"*", "").replaceAll("\"*$", "") : str;
    }

    public static boolean isEmpty(CharSequence str) {
        return str == null || str.toString().isEmpty();
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);

        switch (requestCode) {
            case PermissionChecker.MY_PERMISSIONS_REQUEST: {
                if (grantResults.length > 0
                        && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                    connectToJioPrivate();
                } else {


                    Toast.makeText(getBaseContext(), "Permission required to launch this applilcation", Toast.LENGTH_SHORT).show();
                    finish();

                }
                return;
            }

        }

    }


}


