import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.net.NetworkInfo;
import android.net.wifi.SupplicantState;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.util.Log;
import android.util.Log;
//Just for testing purpose
/**
 * Created by ProBook on 10/16/2017.
 */

public class WifiStateReceiver extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
        String action = intent.getAction();
        if (action.equals(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION)) {
        } else if (action.equals(WifiManager.WIFI_STATE_CHANGED_ACTION)) {
            int iTemp = intent.getIntExtra(WifiManager.EXTRA_WIFI_STATE,
                    WifiManager.WIFI_STATE_UNKNOWN);
//            LogUtil.d(LOG_SET, "+++++++-----------wifiStateReceiver------+++++++", DEBUG);
            checkState(iTemp);
        } else if (action.equals(WifiManager.SUPPLICANT_CONNECTION_CHANGE_ACTION)) {
            NetworkInfo.DetailedState state = WifiInfo.getDetailedStateOf((SupplicantState)
                    intent.getParcelableExtra(WifiManager.EXTRA_SUPPLICANT_CONNECTED));
            changeState(state, context);
//            LogUtil.d(LOG_SET, "------------>>>>SUPPLICANT_STATE_CHANGED_ACTION<<<<<<-------", DEBUG);
        } else if (action.equals(WifiManager.NETWORK_STATE_CHANGED_ACTION)) {
            NetworkInfo.DetailedState state =
                    ((NetworkInfo) intent.getParcelableExtra(WifiManager.EXTRA_NETWORK_INFO)).getDetailedState();
            changeState(state, context);
        }
    }

    private String getCurrentNetwork(Context context) {
        try {
            WifiManager wifiManager = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);
            WifiInfo info = wifiManager.getConnectionInfo();
            return info.getSSID();

        } catch (Exception e) {
            return "Unknown..!!";
        }
    }

    private void changeState(NetworkInfo.DetailedState aState, Context context) {
//        LogUtil.d(LOG_SET, ">>>>>>>>>>>>>>>>>>changeState<<<<<<<<<<<<<<<<"+aState, DEBUG);
        if (aState == NetworkInfo.DetailedState.SCANNING) {
            Log.d("wifiSupplicanState", "SCANNING");
            checkForKioNetAvailability(context);
        } else if (aState == NetworkInfo.DetailedState.CONNECTING) {
            Log.d("wifiSupplicanState", getCurrentNetwork(context) + ">> CONNECTING");
        } else if (aState == NetworkInfo.DetailedState.OBTAINING_IPADDR) {
            Log.d("wifiSupplicanState", "OBTAINING_IPADDR");
        } else if (aState == NetworkInfo.DetailedState.CONNECTED) {
            Log.d("wifiSupplicanState", getCurrentNetwork(context) + ">> CONNECTED");
        } else if (aState == NetworkInfo.DetailedState.DISCONNECTING) {
            Log.d("wifiSupplicanState", "DISCONNECTING");
        } else if (aState == NetworkInfo.DetailedState.DISCONNECTED) {
            Log.d("wifiSupplicanState", "DISCONNECTTED");
            checkForKioNetAvailability(context);
        } else if (aState == NetworkInfo.DetailedState.FAILED) {
        }
    }

    private void checkForKioNetAvailability(Context context) {

    }

    public void checkState(int aInt) {
//        LogUtil.d(LOG_SET,"==>>>>>>>>checkState<<<<<<<<"+aInt, DEBUG);
        if (aInt == WifiManager.WIFI_STATE_ENABLING) {
            Log.d("WifiManager", "WIFI_STATE_ENABLING");
        } else if (aInt == WifiManager.WIFI_STATE_ENABLED) {
            Log.d("WifiManager", "WIFI_STATE_ENABLED");
        } else if (aInt == WifiManager.WIFI_STATE_DISABLING) {
            Log.d("WifiManager", "WIFI_STATE_DISABLING");
        } else if (aInt == WifiManager.WIFI_STATE_DISABLED) {
            Log.d("WifiManager", "WIFI_STATE_DISABLED");
        }
    }
}
